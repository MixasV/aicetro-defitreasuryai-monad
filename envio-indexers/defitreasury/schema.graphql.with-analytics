type TrustlessDeFiTreasury_Delegation {
  id: ID!
  user: String!
  aiAgent: String!
  dailyLimitUsd: BigInt!
  spentTodayUsd: BigInt!
  validUntil: BigInt!
  active: Boolean!
  allowedProtocols: [String!]!
  txHash: String!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type TrustlessDeFiTreasury_SpendRecorded {
  id: ID!
  user: String!
  protocol: String!
  valueUsd: BigInt!
  spentTodayUsd: BigInt!
  txHash: String!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type EmergencyController_EmergencyStatusChanged {
  id: ID!
  paused: Boolean!
  txHash: String!
  blockNumber: BigInt!
  timestamp: BigInt!
}

# ============================================
# Analytics Extension (не трогает существующие entities)
# ============================================

type Analytics_DailyMetrics {
  id: ID! # date-YYYYMMDD
  date: String!
  totalDelegations: Int!
  totalSpendingUsd: BigInt!
  uniqueUsers: Int!
  emergencyPauses: Int!
  averageSpendPerUser: BigInt!
  timestamp: BigInt!
}

type Analytics_EventTimeline {
  id: ID! # txHash-logIndex-type
  user: String!
  eventType: String! # "delegation_created", "spend_recorded", "emergency_pause"
  title: String!
  description: String!
  valueUsd: BigInt
  txHash: String!
  blockNumber: BigInt!
  timestamp: BigInt!
}

type Analytics_UserSummary {
  id: ID! # user address
  user: String!
  totalSpentUsd: BigInt!
  totalDelegations: Int!
  activeDelegations: Int!
  lastActivityAt: BigInt!
  firstActivityAt: BigInt!
}

type Analytics_RiskAlert {
  id: ID!
  user: String!
  alertType: String! # "daily_limit_exceeded", "unusual_spending", "emergency_triggered"
  severity: String! # "low", "medium", "high", "critical"
  message: String!
  valueUsd: BigInt
  triggeredAt: BigInt!
  resolved: Boolean!
  txHash: String
}

